<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 用户数据访问映射 -->
<mapper namespace="vfh.httpInterface.dao.numbers.NumbersDao" >



    <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO td_numbers(
          kname,
          ksex,
          kage,
          knum,
          kwxh,
          laidianrq,
          dilily,
          status,
          remark,
          laiyuanqd,
          requirement,
          targetbuild,
          staff,
          c_level,
          u_id,
          is_top,
          creatdate
        ) VALUES (
          #{entity.kname},
          #{entity.ksex},
          #{entity.kage},
          #{entity.knum},
          #{entity.kwxh},
          #{entity.laidianrq},
          #{entity.dilily},
          #{entity.status},
          #{entity.remark},
          #{entity.laiyuanqd},
          #{entity.requirement},
          #{entity.targetbuild},
          #{entity.staff},
          #{entity.c_level},
           #{entity.u_id},
           #{entity.is_top},
           now()
        )

    </insert>
      <update id="update">

		UPDATE
		td_numbers
		<set>
			<if test="entity.ksex != null">
				ksex = #{entity.ksex},
			</if>
			<if test="entity.kwxh != null">
				kwxh = #{entity.kwxh},
			</if>
			<if test="entity.laiyuanqd != null">
				laiyuanqd = #{entity.laiyuanqd},
			</if>
			<if test="entity.dilily != null">
				dilily = #{entity.dilily},
			</if>
			<if test="entity.status != null">
				status = #{entity.status},
			</if>
			<if test="entity.kage != null">
				kage = #{entity.kage},
			</if>
			<if test="entity.targetbuild != null">
				targetbuild = #{entity.targetbuild},
			</if>
			
			<if test="entity.c_level != null">
				c_level = #{entity.c_level},
			</if>
			<if test="entity.is_top != null">
				is_top = #{entity.is_top}
			</if>

    	</set>
		WHERE
		id = #{entity.id}
		
		</update>
    
        <insert id="insertMiddle" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO td_uc_middle(
          u_id,
          u_name,
          c_id,
          c_name,
          uc_startdate,
          uc_enddate,
          author_id,
          author_name,
          creat_date
        ) VALUES (
          #{entity.u_id},
          #{entity.staff},
          #{entity.id},
          #{entity.kname},
          NOW(),
          "2050-12-30 00:00:00",
          #{entity.u_id},
          #{entity.staff},
          NOW()
        )

    </insert>
      <update id="putNumber">

		UPDATE
		td_uc_middle
		<set>
		is_get = '1'
		</set>
		WHERE
		id = #{entity.m_id}
		
		</update>
    
    
     <insert id="get" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO td_uc_middle(
          u_id,
          u_name,
          c_id,
          c_name,
          uc_startdate,
          uc_enddate,
          author_id,
          author_name,
          creat_date
        ) VALUES (
          #{entity.u_id},
          #{entity.staff},
          #{entity.c_id},
          #{entity.c_name},
          NOW(),
          "2050-12-30 00:00:00",
          #{entity.u_id},
          #{entity.staff},
          NOW()
        )

    </insert>
    
    <select id="find" resultType="hashmap">
        SELECT 
            a.*, b.*
        FROM 
            `td_numbers` a ,
            `td_uc_middle` b 
            
        WHERE 
               b.`c_id` = a.id 
              AND NOW() between b.`uc_startdate` and b.`uc_enddate`
              
       <if test="filter.knum != null and filter.knum != ''">
       <bind name="filter.knum" value=" '%' + filter.knum + '%' " />
			AND a.knum LIKE #{filter.knum}
		</if>   
		<if test="filter.userId != null and filter.userId != ''">
			AND b.u_id=#{filter.userId}
		</if>
		<if test="filter.creatdate != null and filter.creatdate != ''">
			AND TO_DAYS(a.creatdate)=TO_DAYS(#{filter.creatdate})
		</if>	

		ORDER BY  a.is_top DESC, b.`uc_startdate` DESC 
		<if test="filter.first != null and filter.last != null">
			LIMIT #{filter.first},#{filter.last}
		</if>
    </select>
       <select id="find_gk" resultType="hashmap">
        SELECT 
            a.*, b.*,b.id m_id
        FROM 
            `td_numbers` a ,
            `td_uc_middle` b 
            
        WHERE 
               b.`is_get` = '0'
              AND b.`c_id` = a.id 
              AND NOW() > b.`uc_enddate`
		<if test="filter.first != null and filter.last != null">
			LIMIT #{filter.first},#{filter.last}
		</if>
    </select>
    <select id="findall" resultType="hashmap">
        SELECT
            id AS "id",
            kname AS "kname",
            ksex AS "ksex",
            kage AS "kage",
            knum AS "knum",
            laidianrq AS "laidianrq",
            kwxh AS "kwxh",
            laiyuanqd AS "laiyuanqd",
            dilily AS "dilily",
            status AS "status",
            remark AS "remark",
            requirement AS "requirement",
            targetbuild AS "targetbuild",
            staff AS "staff"
        FROM
          td_numbers
        ORDER BY id DESC
    </select>
    
    
        <select id="getNumByID" resultType="hashmap">
        SELECT
            id AS "id",
            kname AS "kname",
            ksex AS "ksex",
            kage AS "kage",
            knum AS "knum",
            laidianrq AS "laidianrq",
            kwxh AS "kwxh",
            laiyuanqd AS "laiyuanqd",
            dilily AS "dilily",
            status AS "status",
            remark AS "remark",
            requirement AS "requirement",
            targetbuild AS "targetbuild",
            staff AS "staff",
            is_top AS "is_top"
        FROM
          td_numbers
        where 
           Id = #{Id} 
          
        ORDER BY id DESC
    </select>
      <select id="count" resultType="long">
        SELECT 
            count(*)
        FROM 
            `td_numbers` a ,
            `td_uc_middle` b 
            
        WHERE 
              b.`u_id`=a.`u_id`
              AND b.`c_id` = a.id 
              AND NOW() between b.`uc_startdate` and b.`uc_enddate`
              
              
		<if test="filter.userId != null and filter.userId != ''">
			AND b.u_id=#{filter.userId}
		</if>
		<if test="filter.creatdate != null and filter.creatdate != ''">
			AND TO_DAYS(a.creatdate)=TO_DAYS(#{filter.creatdate})
		</if>
		ORDER BY b.`uc_startdate` DESC

    </select>
       <select id="count_gk" resultType="long">
        SELECT 
            count(*)
          FROM 
            `td_numbers` a ,
            `td_uc_middle` b 
            
        WHERE 
               b.`is_get` = '0'
              AND b.`c_id` = a.id 
              AND NOW() > b.`uc_enddate`
              ORDER BY b.`uc_startdate` DESC

    </select>
     <select id="count_gkByuid" resultType="long">
        SELECT count(*) FROM (
 SELECT c.* FROM (  
SELECT a.* FROM `td_reback` a WHERE a.`u_id` IN (SELECT b.`u_id` u_id FROM `td_uc_middle` b  WHERE NOW() BETWEEN b.`uc_startdate` AND b.`uc_enddate`) ORDER BY a.`redate` DESC
) C GROUP BY c.pid ) d WHERE (TO_DAYS(NOW())-TO_DAYS(d.redate))>40  
     <if test="filter.u_id != null and filter.u_id != ''">
       AND d.u_id=#{filter.u_id}
     </if>
    </select>
    <select id="find_gkByudi" resultType="hashmap">
SELECT * FROM  `td_uc_middle` e ,(
 SELECT * FROM (
 SELECT c.* FROM (  
SELECT a.* FROM `td_reback` a WHERE a.`u_id` IN (SELECT b.`u_id` u_id FROM `td_uc_middle` b  WHERE NOW() BETWEEN b.`uc_startdate` AND b.`uc_enddate`) ORDER BY a.`redate` DESC
) C GROUP BY c.pid ) d WHERE (TO_DAYS(NOW())-TO_DAYS(d.redate))>40 

   <if test="filter.u_id != null and filter.u_id != ''">
       AND d.u_id=#{filter.u_id}
     </if>
 ) f 
WHERE f.pid = e.`c_id` AND NOW() BETWEEN e.`uc_startdate` AND e.`uc_enddate`

    </select>
    
       <select id="find_gkAll" resultType="hashmap">
SELECT id FROM  `td_uc_middle` e ,(
 SELECT * FROM (
 SELECT c.* FROM (  
SELECT a.* FROM `td_reback` a WHERE a.`u_id` IN (SELECT b.`u_id` u_id FROM `td_uc_middle` b  WHERE NOW() BETWEEN b.`uc_startdate` AND b.`uc_enddate`) ORDER BY a.`redate` DESC
) C GROUP BY c.pid ) d WHERE (TO_DAYS(NOW())-TO_DAYS(d.redate))>40 ) f 
WHERE f.pid = e.`c_id` AND NOW() BETWEEN e.`uc_startdate` AND e.`uc_enddate`

    </select>
    
    
    
    <update id="skTogk">

		UPDATE	
td_uc_middle g ,(SELECT e.id  id FROM  `td_uc_middle` e ,(
 SELECT * FROM (
 SELECT c.* FROM (  
SELECT a.* FROM `td_reback` a WHERE a.`u_id` IN (SELECT b.`u_id` u_id FROM `td_uc_middle` b  WHERE NOW() BETWEEN b.`uc_startdate` AND b.`uc_enddate`) ORDER BY a.`redate` DESC
) C GROUP BY c.pid ) d WHERE (TO_DAYS(NOW())-TO_DAYS(d.redate))>40  ) f 
WHERE f.pid = e.`c_id` AND NOW() BETWEEN e.`uc_startdate` AND e.`uc_enddate`) k
SET is_get = '0',
 uc_enddate = NOW() 
 WHERE g.id=k.id 
		
		</update>
</mapper>